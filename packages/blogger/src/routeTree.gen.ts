/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as PreviewRouteImport } from './routes/preview'
import { Route as IndexRouteImport } from './routes/index'

const SettingsRoute = SettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => rootRouteImport,
} as any)
const PreviewRoute = PreviewRouteImport.update({
    id: '/preview',
    path: '/preview',
    getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
    '/': typeof IndexRoute
    '/preview': typeof PreviewRoute
    '/settings': typeof SettingsRoute
}
export interface FileRoutesByTo {
    '/': typeof IndexRoute
    '/preview': typeof PreviewRoute
    '/settings': typeof SettingsRoute
}
export interface FileRoutesById {
    __root__: typeof rootRouteImport
    '/': typeof IndexRoute
    '/preview': typeof PreviewRoute
    '/settings': typeof SettingsRoute
}
export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath
    fullPaths: '/' | '/preview' | '/settings'
    fileRoutesByTo: FileRoutesByTo
    to: '/' | '/preview' | '/settings'
    id: '__root__' | '/' | '/preview' | '/settings'
    fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
    IndexRoute: typeof IndexRoute
    PreviewRoute: typeof PreviewRoute
    SettingsRoute: typeof SettingsRoute
}

declare module '@tanstack/react-router' {
    interface FileRoutesByPath {
        '/settings': {
            id: '/settings'
            path: '/settings'
            fullPath: '/settings'
            preLoaderRoute: typeof SettingsRouteImport
            parentRoute: typeof rootRouteImport
        }
        '/preview': {
            id: '/preview'
            path: '/preview'
            fullPath: '/preview'
            preLoaderRoute: typeof PreviewRouteImport
            parentRoute: typeof rootRouteImport
        }
        '/': {
            id: '/'
            path: '/'
            fullPath: '/'
            preLoaderRoute: typeof IndexRouteImport
            parentRoute: typeof rootRouteImport
        }
    }
}

const rootRouteChildren: RootRouteChildren = {
    IndexRoute: IndexRoute,
    PreviewRoute: PreviewRoute,
    SettingsRoute: SettingsRoute,
}
export const routeTree = rootRouteImport
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>()
